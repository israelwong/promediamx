generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Sistema base

model Rol {
  id        String    @id @default(cuid())
  nombre    String
  descripcion String?
  status    String    @default("activo")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Usuario {
  id        String    @id @default(cuid())
  rol       String
  status    String   @default("activo")
  createdAt DateTime  @default(now())
  updatedAt DateTime @updatedAt
  username  String    @unique
  email     String    @unique
  telefono  String    @unique @default("")
  password  String
  sesiones  Sesion[]
}

model Sesion {
  id        String   @id @default(cuid())
  usuarioId String
  usuario   Usuario  @relation(fields: [usuarioId], references: [id])
  token     String
  status    String   @default("active")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cliente{
  id        String   @id @default(cuid())
  nombre    String?
  email     String
  telefono  String
  status    String   @default("activo")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Perfil    Perfil[]
  contrato  Contrato[]
}

model Perfil{
  id        String   @id @default(cuid())
  clienteId String
  cliente   Cliente @relation(fields: [clienteId], references: [id])
  nombre    String
  slogan    String?
  descripcion String?
  direccion String?
  horarios Json?
  email     String?
  telefono  String?
  whatsapp  String?
  google_maps_iframe String?
  google_maps   String?
  web        String?
  faq        Json?
  status    String   @default("activo")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  perfilRRSS RRSS[]
}

model RRSS{
  id        String   @id @default(cuid())
  orden     Int? 
  perfilId  String
  perfil    Perfil @relation(fields: [perfilId], references: [id])
  nombre    String
  url       String
  status    String   @default("activo")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Contrato{
  id        String   @id @default(cuid())
  clienteId String
  cliente   Cliente @relation(fields: [clienteId], references: [id])
  servicioId String
  servicio   Servicio @relation(fields: [servicioId], references: [id])
  precio    Float
  demo      Boolean
  vigencia  DateTime
  suscripcion Boolean?
  status    String   @default("activo")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Pago      Pago[]
  Landingpage  Landingpage[]
  CRM      CRM[]
  Pasarela Pasarela[]
}

model Servicio{
  id        String   @id @default(cuid())
  orden     Int?
  tipo      String
  // TipoServicio TipoServicio @relation(fields: [tipo], references: [id])
  nombre    String
  descripcion String
  costo    Float?
  precio    Float
  status    String   @default("activo")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  contrato  Contrato[]
  Cotizacion Cotizacion[]
  PaqueteServicio PaqueteServicio[]
  // Costo Costo[]
}

model TipoServicio{
  id        String   @id @default(cuid())
  nombre    String //marketing,remarkering, diseño gráfico, crm, etc
  descripcion String?
  status    String   @default("activo")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // Servicio  Servicio[]
}

model Paquete{
  id        String   @id @default(cuid())
  orden     Int?
  nombre    String
  descripcion String?
  precio    Float
  status    String   @default("activo")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  PaqueteServicio PaqueteServicio[]
}

model PaqueteServicio{
  id        String   @id @default(cuid())
  paqueteId String
  paquete   Paquete @relation(fields: [paqueteId], references: [id])
  servicioId String
  servicio   Servicio @relation(fields: [servicioId], references: [id])
  status    String   @default("activo")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Pago{
  id        String   @id @default(cuid())
  contratoId String?
  cotizacionId String?
  metodoPago String
  monto     Float
  linkPagoId String?
  linkPago  LinkPago? @relation(fields: [linkPagoId], references: [id])
  stripe_session_id                  String?                           @unique
  stripe_payment_id                  String?                           @unique
  status    String   @default("pendiente")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Pasarela  Pasarela[]
  Cotizacion Cotizacion[]
  Contrato  Contrato[]
}

//! Landingpage
model Landingpage{
  id        String   @id @default(cuid())
  contratoId String
  contrato   Contrato @relation(fields: [contratoId], references: [id])
  nombre    String
  url       String?
  status    String   @default("activo")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Modulo Modulo[]
  Estadistica Estadistica[]
  Leadform Leadform[]
  Agente    Agente[]
}

model Modulo{
  id        String   @id @default(cuid())
  landingpageId String
  landingpage   Landingpage @relation(fields: [landingpageId], references: [id])
  orden     Int?
  nombre    String
  jsonStyle Json?
  jsonParams Json?
  status    String   @default("pendiente")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  componenteId String
  componente   Componente @relation(fields: [componenteId], references: [id])  
  Estadistica Estadistica[]
}

model Componente{
  id        String   @id @default(cuid())
  nombre    String
  descripcion String?
  jsonStyle Json? // estilo por defecto
  jsonParams Json? // parametros por defecto //si es botón target:_blank/self url link pago, leadform, 
  status    String   @default("activo")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Modulo Modulo[]
}

model Estadistica{
  id        String   @id @default(cuid())
  landingpageId String
  landingpage   Landingpage @relation(fields: [landingpageId], references: [id])
  moduloId String
  modulo    Modulo @relation(fields: [moduloId], references: [id])
  tipoEvento String? //click, view, lead
  origen    String? //facebook, google, instagram, email, whatsapp
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//! Leadform
model Leadform{
  id        String   @id @default(cuid())
  nombre    String
  descripcion String?
  status    String   @default("activo")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  landingpageId String
  landingpage   Landingpage @relation(fields: [landingpageId], references: [id])
  Lead      Lead[]
}

//!CRM

model Canal{
  id        String   @id @default(cuid())
  orden     Int?
  nombre    String //facebook, google, instagram, email, whatsapp
  status    String   @default("activo")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Lead      Lead[]
  Agente    Agente[]
}

model CRM{
  id        String   @id @default(cuid())
  contratoId String
  contrato   Contrato @relation(fields: [contratoId], references: [id])
  status    String   @default("activo")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Lead      Lead[]
  Agente    Agente[]
}

model Pipeline{
  id        String   @id @default(cuid())
  orden     Int?
  nombre    String //nuevo, seguimiento, promesa, ganado, perdido
  status    String   @default("activo")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Lead      Lead[]
}


model Lead{
  id        String   @id @default(cuid())
  crmId     String?
  crm       CRM? @relation(fields: [crmId], references: [id])
  agenteId  String?
  agente    Agente? @relation(fields: [agenteId], references: [id])
  canalId   String?
  Canal     Canal? @relation(fields: [canalId], references: [id])
  nombre    String
  email     String
  telefono  String
  jsonParams Json?
  pilelineId String?
  Pipeline  Pipeline? @relation(fields: [pilelineId], references: [id])
  status    String   @default("activo")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  LeadformId String?
  Leadform   Leadform? @relation(fields: [LeadformId], references: [id])
  Bitacora  Bitacora[]
  Agenda    Agenda[]
  Cotizacion Cotizacion[]
}

model Agente{
  id        String   @id @default(cuid())
  crmId     String
  crm       CRM @relation(fields: [crmId], references: [id])
  landingpageId String?
  landingpage   Landingpage? @relation(fields: [landingpageId], references: [id])
  canalId   String?
  Canal     Canal? @relation(fields: [canalId], references: [id])
  username    String
  email     String
  telefono  String
  password  String
  status    String   @default("activo")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Lead      Lead[]
  Bitacora  Bitacora[]
  Agenda    Agenda[]
}

model Bitacora{
  id        String   @id @default(cuid())
  agenteId  String
  agente    Agente @relation(fields: [agenteId], references: [id])
  leadId    String
  lead      Lead @relation(fields: [leadId], references: [id])
  descripcion String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Agenda{
  id        String   @id @default(cuid())
  agenteId  String
  leadId    String
  lead      Lead @relation(fields: [leadId], references: [id])
  agente    Agente @relation(fields: [agenteId], references: [id])
  fecha     DateTime
  asunto    String
  descripcion String?
  objetivo  String?
  status    String   @default("activo")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//! Passarela de pagos

model Pasarela{
  id        String   @id @default(cuid())
  contratoId String?
  contrato   Contrato? @relation(fields: [contratoId], references: [id])
  nombre    String
  descripcion String?
  status    String   @default("activo")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  PasarelaMetodoPago PasarelaMetodoPago[]
  LinkPago  LinkPago[]
  Pago      Pago[]
}

model metodoPago{
  id        String   @id @default(cuid())
  orden     Int?
  nombre    String
  comisionPorcentajeFintech Float?
  comisionFijaFintech Float?
  status    String   @default("activo")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  PasarelaMetodoPago PasarelaMetodoPago[]
}

model PasarelaMetodoPago{
  id        String   @id @default(cuid())
  orden     Int?
  pasarelaId String
  pasarela   Pasarela @relation(fields: [pasarelaId], references: [id])
  metodoPagoId String
  metodoPago   metodoPago @relation(fields: [metodoPagoId], references: [id])
  status    String   @default("activo")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model LinkPago{
  id        String   @id @default(cuid())
  pasarelaPagoId String
  pasarela   Pasarela @relation(fields: [pasarelaPagoId], references: [id])
  link      String
  concepto  String
  descripcion String?
  monto    Float
  suscripcion Boolean
  vigencia  DateTime?
  status    String   @default("pendiente")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt  
  Pago      Pago[]
}

model Cotizacion{
  id        String   @id @default(cuid())
  leadId String
  lead Lead @relation(fields: [leadId], references: [id])
  servicioId String
  servicio   Servicio @relation(fields: [servicioId], references: [id])
  precio    Float
  vigencia  DateTime
  status    String   @default("pendiente")//pendiente, aprobado
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Pago      Pago[]
}
